#.MODULE_IMPORT
#.END

#.EXPORTS
#.END

#.OMIT_ASSIGNMENT
#.END

#.PDU
  AircraftPDUs
  GroundPDUs
  ProtectedAircraftPDUs
  ProtectedGroundPDUs
#.END


#.FIELD_RENAME
AircraftPDUs/send aircraftpdus_send
GroundPDUs/send groundpdus_send
ATCUplinkMessageData/constrainedData  atcuplinkmessagedata_constraineddata
ATCDownlinkMessageData/constrainedData  atcdownlinkmessagedata_constraineddata
ATCDownlinkMessageData/elementIds/_item atcdownlinkmessagedata_elementids_item
ATCUplinkMessageData/elementIds/_item atcuplinkmessagedata_elementids_item
ATCDownlinkMessageData/elementIds atcdownlinkmessagedata_elementids
ATCUplinkMessageData/elementIds atcuplinkmessagedata_elementids
ATCUplinkMessage/messageData  atcuplinkmessage_messagedata
ATCDownlinkMessage/messageData  atcdownlinkmessage_messagedata
Runway/direction runway_direction
Winds/direction winds_direction
DirectionDegrees/direction  direction
DistanceSpecifiedDirection/direction  direction
Holdatwaypoint/direction  direction
HoldClearance/direction direction
VerticalChange/direction  vertical_direction
FixName/name  fixname_name
Navaid/name navaid_name
Winds/speed winds_speed
LevelSpeed/speed  levelspeed_speed
ProtectedGroundPDUs/abortProvider pmcpdlcproviderabortreason
ProtectedAircraftPDUs/abortProvider pmcpdlcproviderabortreason
ProtectedGroundPDUs/abortUser pmcpdlcuserabortreason
ProtectedAircraftPDUs/abortUser pmcpdlcuserabortreason
ProtectedStartDownMessage/mode  protectedmode
ProtectedGroundPDUs/send  protecteduplinkmessage
ProtectedStartDownMessage/startDownlinkMessage  protecteddownlinkmessage
ProtectedGroundPDUs/startup protecteduplinkmessage
ProtectedAircraftPDUs/startdown protectedstartDownmessage
#.END


#.FN_BODY CPDLCMessage
    tvbuff_t *tvb_usr = NULL;

    offset = dissect_per_bit_string(tvb, offset, actx, tree, hf_index, NO_BOUND, NO_BOUND, FALSE, &tvb_usr, NULL);

    if (tvb_usr) {
      switch(check_heur_msg_type(actx->pinfo)){
          case dm:
              dissect_atn_cpdlc_ATCDownlinkMessage(tvb_new_subset_remaining(tvb_usr, 0), 0, actx, tree, hf_index);
              break;
          case um:
              dissect_atn_cpdlc_ATCUplinkMessage(tvb_new_subset_remaining(tvb_usr, 0), 0, actx , tree, hf_index);
              break;
          default:
              break;
      }
    }

#.END

#.FN_BODY AlgorithmIdentifier
    proto_tree *top_tree=NULL;

    offset=call_ber_oid_callback(object_identifier_id, tvb, offset, actx->pinfo, top_tree, NULL);

#.END

#.FN_BODY AircraftFlightIdentification
    offset = dissect_per_restricted_character_string(tvb, offset, actx, tree, hf_index,2, 8, FALSE, ia5alpha , 127, NULL);
#.END

#.FN_BODY Airport
    offset = dissect_per_restricted_character_string(tvb, offset, actx, tree, hf_index,4, 4, FALSE, ia5alpha , 127, NULL);
#.END

#.FN_BODY FacilityDesignation
    offset = dissect_per_restricted_character_string(tvb, offset, actx, tree, hf_index,4, 8, FALSE, ia5alpha , 127, NULL);
#.END

#.FN_BODY FreeText
    offset = dissect_per_restricted_character_string(tvb, offset, actx, tree, hf_index,1, 256, FALSE, ia5alpha , 127, NULL);
#.END

#.FN_BODY NavaidName
    offset = dissect_per_restricted_character_string(tvb, offset, actx, tree, hf_index,1, 4, FALSE, ia5alpha , 127, NULL);
#.END

#.FN_BODY Procedure
    offset = dissect_per_restricted_character_string(tvb, offset, actx, tree, hf_index,1, 20, FALSE, ia5alpha , 127, NULL);
#.END

#.FN_BODY ProcedureTransition
    offset = dissect_per_restricted_character_string(tvb, offset, actx, tree, hf_index,1, 5, FALSE, ia5alpha , 127, NULL);
#.END

#.FN_BODY Fix
    offset = dissect_per_restricted_character_string(tvb, offset, actx, tree, hf_index,1, 5, FALSE, ia5alpha , 127, NULL);
#.END

#.FN_BODY ATISCode
    offset = dissect_per_restricted_character_string(tvb, offset, actx, tree, hf_index,1, 1, FALSE, ia5alpha , 127, NULL);
#.END

#.FN_BODY ATSRouteDesignator
    offset = dissect_per_restricted_character_string(tvb, offset, actx, tree, hf_index,2, 7, FALSE, ia5alpha , 127, NULL);
#.END

#.FN_BODY FacilityName
    offset = dissect_per_restricted_character_string(tvb, offset, actx, tree, hf_index,3, 18, FALSE, ia5alpha , 127, NULL);
#.END

#
# Editor modelines  -  http://www.wireshark.org/tools/modelines.html
#
# Local variables:
# c-basic-offset: 4
# tab-width: 8
# indent-tabs-mode: nil
# End:
#
# vi: set shiftwidth=4 tabstop=8 expandtab:
# :indentSize=4:tabSize=8:noTabs=true:
#
