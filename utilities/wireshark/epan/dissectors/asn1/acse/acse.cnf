# asce.cnf
# ACSE conformation file

#.IMPORT ../x509if/x509if-exp.cnf

#.OMIT_ASSIGNMENT
Application-context-name
#.END

#.NO_EMIT ONLY_VALS
ACSE-apdu

#.EXPORTS
EXTERNALt
AE-title
AP-title
AP-invocation-identifier
AE-qualifier
ASO-qualifier
AE-invocation-identifier

#.TYPE_RENAME
AARQ-apdu/_untag/protocol-version	T_AARQ_protocol_version
AARE-apdu/_untag/protocol-version	T_AARE_protocol_version
AARQ-apdu/_untag/aSO-context-name	T_AARQ_aSO_context_name
AARE-apdu/_untag/aSO-context-name	T_AARE_aSO_context_name
ACRQ-apdu/_untag/aSO-context-name	T_ACRQ_aSO_context_name
ACRP-apdu/_untag/aSO-context-name	T_ACRP_aSO_context_name

#.FIELD_RENAME
AARQ-apdu/_untag/user-information	aARQ_user_information
AARE-apdu/_untag/user-information	aARE_user_information
ABRT-apdu/_untag/user-information	aBRT_user_information
RLRE-apdu/_untag/user-information	rLRE_user_information
RLRQ-apdu/_untag/user-information	rLRQ_user_information
P-context-result-list/_item/result	pcontext_result
RLRE-apdu/_untag/reason		rLRE_reason
RLRQ-apdu/_untag/reason		rLRQ_reason
AARQ-apdu/_untag/protocol-version	aARQ_protocol_version
AARE-apdu/_untag/protocol-version	aARE_protocol_version
AARQ-apdu/_untag/aSO-context-name	aARQ_aSO_context_name
AARE-apdu/_untag/aSO-context-name	aARE_aSO_context_name
ACRQ-apdu/_untag/aSO-context-name	aCRQ_aSO_context_name
PDV-list/presentation-data-values/octet-aligned		pDVList_octet_aligned

#.FN_PARS Authentication-value-other/other-mechanism-name
  FN_VARIANT = _str VAL_PTR = &actx->external.direct_reference

#.FN_BODY Authentication-value-other/other-mechanism-name
%(DEFAULT_BODY)s
  actx->external.direct_ref_present = (actx->external.direct_reference != NULL) ? TRUE : FALSE;

#.FN_BODY Authentication-value-other/other-mechanism-value
  if (actx->external.direct_ref_present) {
    offset=call_ber_oid_callback(actx->external.direct_reference, tvb, offset, actx->pinfo, top_tree, actx->private_data);
  }

#.FN_BODY PDV-list/presentation-data-values/simple-ASN1-type
/*XXX not implemented yet */

#.FN_BODY AARQ-apdu/_untag/aSO-context-name
  offset = dissect_ber_object_identifier_str(FALSE, actx, tree, tvb, offset,
                                         hf_index, &actx->external.direct_reference);
  actx->external.direct_ref_present = (actx->external.direct_reference != NULL) ? TRUE : FALSE;

#.FN_BODY AARE-apdu/_untag/aSO-context-name
  offset = dissect_ber_object_identifier_str(FALSE, actx, tree, tvb, offset,
                                         hf_index, &actx->external.direct_reference);
  actx->external.direct_ref_present = (actx->external.direct_reference != NULL) ? TRUE : FALSE;

#.FN_BODY ACRQ-apdu/_untag/aSO-context-name
  offset = dissect_ber_object_identifier_str(FALSE, actx, tree, tvb, offset,
                                         hf_index, &actx->external.direct_reference);
  actx->external.direct_ref_present = (actx->external.direct_reference != NULL) ? TRUE : FALSE;

#.FN_BODY ACRP-apdu/_untag/aSO-context-name
  offset = dissect_ber_object_identifier_str(FALSE, actx, tree, tvb, offset,
                                         hf_index, &actx->external.direct_reference);
  actx->external.direct_ref_present = (actx->external.direct_reference != NULL) ? TRUE : FALSE;

#.FN_BODY EXTERNALt/_untag/indirect-reference
  char *oid;
  struct SESSION_DATA_STRUCTURE* session = (struct SESSION_DATA_STRUCTURE*) actx->private_data;

  offset = dissect_ber_integer(FALSE, actx, tree, tvb, offset,
                hf_acse_indirect_reference,
                &indir_ref);

  /* look up the indirect reference */
  if((oid = find_oid_by_pres_ctx_id(actx->pinfo, indir_ref)) != NULL) {
    actx->external.direct_reference = wmem_strdup(wmem_packet_scope(), oid);
    actx->external.direct_ref_present = TRUE;
  }

  if(session)
	session->pres_ctx_id = indir_ref;

#.FN_PARS EXTERNALt/_untag/direct-reference
  FN_VARIANT = _str VAL_PTR = &actx->external.direct_reference

#.FN_BODY EXTERNALt/_untag/direct-reference
%(DEFAULT_BODY)s
  actx->external.direct_ref_present = (actx->external.direct_reference != NULL) ? TRUE : FALSE;

#.FN_BODY EXTERNALt/_untag/encoding/single-ASN1-type
  if (actx->external.direct_ref_present) {
    offset=call_ber_oid_callback(actx->external.direct_reference, tvb, offset, actx->pinfo, top_tree ? top_tree : tree, actx->private_data);
  }

#.FN_BODY EXTERNALt/_untag/encoding/octet-aligned
  if (actx->external.direct_ref_present) {
    offset=call_ber_oid_callback(actx->external.direct_reference, tvb, offset, actx->pinfo, top_tree ? top_tree : tree, actx->private_data);
  }

#.FN_BODY AARQ-apdu
  col_append_str(actx->pinfo->cinfo, COL_INFO, "A-Associate-Request");

  %(DEFAULT_BODY)s

#.FN_BODY AARE-apdu
  col_append_str(actx->pinfo->cinfo, COL_INFO, "A-Associate-Response");

  %(DEFAULT_BODY)s

#.FN_BODY RLRQ-apdu
  col_append_str(actx->pinfo->cinfo, COL_INFO, "Release-Request");

  %(DEFAULT_BODY)s

#.FN_PARS Release-request-reason
  VAL_PTR=&reason

#.FN_BODY Release-request-reason
  int reason = -1;

  %(DEFAULT_BODY)s

  if(reason != -1)
   col_append_fstr(actx->pinfo->cinfo, COL_INFO, " (%%s)", val_to_str(reason, acse_Release_request_reason_vals, "reason(%%d)"));

#.FN_BODY RLRE-apdu
  col_append_str(actx->pinfo->cinfo, COL_INFO, "Release-Response");

  %(DEFAULT_BODY)s

#.FN_PARS Release-response-reason
  VAL_PTR=&reason

#.FN_BODY Release-response-reason
  int reason = -1;

  %(DEFAULT_BODY)s

  if(reason != -1)
   col_append_fstr(actx->pinfo->cinfo, COL_INFO, " (%%s)", val_to_str(reason, acse_Release_response_reason_vals, "reason(%%d)"));

#.FN_BODY ABRT-apdu
  col_append_str(actx->pinfo->cinfo, COL_INFO, "Abort");

  %(DEFAULT_BODY)s

#.FN_BODY ABRT-source  VAL_PTR=&source
  int source = -1;

  %(DEFAULT_BODY)s

  if(source != -1)
   col_append_fstr(actx->pinfo->cinfo, COL_INFO, " (%%s)", val_to_str(source, acse_ABRT_source_vals, "source(%%d)"));

#.FIELD_ATTR
Association-data/_item NAME = "Association-data"

#.END
